apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'com.google.firebase.appdistribution'

allprojects {
    repositories {
        mavenCentral()
        google()
        jcenter()
        maven { url 'https://jitpack.io' }
    }
}

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.2"
    defaultConfig {
        applicationId "com.mgabbi.encryption.sample"
        minSdkVersion 21
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        buildConfigField 'String', 'BASE_URL', '"https://5d4c17f600dbb1001487a4ab.mockapi.io/api/"'
    }

    signingConfigs {
        debug {}
        release {
//            Set these according to your project
//            Take care that you need to sign the app in release mode
//            to be able to make a Firebase Distribution release through Circle CI
//            Don't forget to also set the `FIREBASE_TOKEN` variable on Circle CI according to docs

//            storeFile file('../keystore')
//            storePassword System.getenv("KEYSTORE_PASSWORD")
//            keyAlias System.getenv("KEY_ALIAS")
//            keyPassword System.getenv("KEY_PASSWORD")
        }
    }

    buildTypes {
        debug {
        }

        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
//            Check firebase app distribution documentation for more details and how to get the App ID

//            firebaseAppDistribution {
//                testersFile = "app/testers.txt"
//                appId = "1:814852906141:android:60f848afe1ee0851b64874"
//            }
        }
    }

    androidExtensions {
        experimental = true
    }

    dataBinding {
        enabled = true
    }

    compileOptions {
        sourceCompatibility rootProject.java_version
        targetCompatibility rootProject.java_version
    }

    kotlinOptions {
        jvmTarget = "1.8"
    }

    lintOptions {
        abortOnError true
        warningsAsErrors true
        lintConfig file("lint.xml")
        disable 'GradleDependency'
    }
}

dependencies {
    // Kotlin & Coroutines
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$rootProject.kotlin"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$rootProject.coroutines_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$rootProject.coroutines_version"

    // Lifecycle, LiveData, ViewModel
    implementation "androidx.lifecycle:lifecycle-extensions:$rootProject.lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$rootProject.lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$rootProject.lifecycle_version"

    // Navigation
    implementation "androidx.navigation:navigation-fragment-ktx:$rootProject.nav_version"
    implementation "androidx.navigation:navigation-ui-ktx:$rootProject.nav_version"

    // Android defaults
    implementation "androidx.core:core-ktx:$rootProject.androidx_core"
    implementation "androidx.fragment:fragment-ktx:$rootProject.androidx_fragment"
    implementation "androidx.appcompat:appcompat:$rootProject.androidx_appcompat"
    implementation "androidx.annotation:annotation:$rootProject.androidx_annotation"
    implementation "androidx.legacy:legacy-support-v4:$rootProject.androidx_legacy"
    implementation "androidx.constraintlayout:constraintlayout:$rootProject.androidx_constraint"
    implementation "androidx.recyclerview:recyclerview:$rootProject.androidx_recyclerview"
    implementation "androidx.cardview:cardview:$rootProject.androidx_cardview"
    implementation "com.google.android.material:material:$rootProject.material"

    // Firebase
    implementation "com.google.firebase:firebase-analytics:$rootProject.firebase_version"

    // Koin
    implementation "org.koin:koin-core:$rootProject.koin_version"
    implementation "org.koin:koin-android:$rootProject.koin_version"
    implementation "org.koin:koin-androidx-scope:$rootProject.koin_version"
    implementation "org.koin:koin-androidx-viewmodel:$rootProject.koin_version"

    // Anko threading
    implementation "org.jetbrains.anko:anko:$rootProject.anko"

    // Networking
    implementation "com.squareup.retrofit2:retrofit:$rootProject.retrofit"
    implementation "com.google.code.gson:gson:$rootProject.gson"
    implementation "com.squareup.retrofit2:converter-gson:$rootProject.converters"
    implementation "com.squareup.okhttp3:logging-interceptor:$rootProject.logging_interceptor"

    // Permissions
    implementation "com.github.tbruyelle:rxpermissions:$rootProject.rx_permissions"
    implementation "io.reactivex.rxjava2:rxandroid:$rootProject.rx_android"
    implementation "com.github.ybq:Android-SpinKit:$spin_kit"

    // Hawk
    implementation "com.orhanobut:hawk:$rootProject.hawk"

    // Encryption lib
    implementation "com.mgabbi.encryption.lib:encryption-lib:$rootProject.libVersionName"
}

apply plugin: 'com.google.gms.google-services'
apply plugin: "androidx.navigation.safeargs.kotlin"